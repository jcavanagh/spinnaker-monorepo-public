name: Publish (docker)
description: Publishes Docker containers for a Spinnaker project
author: jcavanagh

inputs:
  project:
    description: Project to publish
    required: true
  push:
    description: Whether to push the build images or not.  e.g. PRs should build, but not push, images
    default: 'false'
  release-train:
    description: Additional tagging for the latest build on a branch
    required: true
  version:
    description: The version to publish
    required: true
  build-command:
    description: Gradle command to run to prepare the container.  Defaults to `:<project>:<project>-web:installDist`.  Set to 'false' to skip build.
  build-args:
    description: Newline-separated list of build args to forward to Docker
  build-url:
    description: Link to build that produced this container
  container-registry:
    description: Destination container registry
    default: us-west2-docker.pkg.dev/spinnaker-monorepo-test/docker
  gar-json-key:
    description: Google Artifact Registry JSON key
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to GAR
      uses: docker/login-action@v3
      # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
      with:
        registry: us-west2-docker.pkg.dev
        username: _json_key
        password: ${{ inputs.gar-json-key }}

    - name: Process Inputs
      shell: bash
      run: |
        if [[ '${{ inputs.build-command }}' != '' ]]; then
          echo "gradle-build-command=${{ inputs.build-command }}" >> "$GITHUB_ENV"
        else
          echo "gradle-build-command=:${{ inputs.project }}:${{ inputs.project }}-web:installDist" >> "$GITHUB_ENV"
        fi
        
        if [[ '${{ hashFiles(format('{0}/Dockerfile', inputs.project)) }}' != '' ]]; then
          echo "has-standard=true" >> $GITHUB_ENV
        fi
        
        if [[ '${{ hashFiles(format('{0}/Dockerfile.slim', inputs.project)) }}' != '' ]]; then
          echo "has-slim=true" >> $GITHUB_ENV
        fi
        
        if [[ '${{ hashFiles(format('{0}/Dockerfile.java11.slim', inputs.project)) }}' != '' ]]; then
          echo "has-slim-java11=true" >> $GITHUB_ENV
        fi
        
        if [[ '${{ hashFiles(format('{0}/Dockerfile.java11.ubuntu', inputs.project)) }}' != '' ]]; then
          echo "has-ubuntu=true" >> $GITHUB_ENV
        fi
        
        if [[ '${{ hashFiles(format('{0}/Dockerfile.java11.ubuntu', inputs.project)) }}' != '' ]]; then
          echo "has-ubuntu-java11=true" >> $GITHUB_ENV
        fi

    - name: Run build to produce container artifacts
      if: env.gradle-build-command != 'false'
      env:
        ORG_GRADLE_PROJECT_version: ${{ inputs.version }}
      shell: bash
      run: |
        ./gradlew ${{ env.gradle-build-command }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest

    - name: Build and publish standard container image
      if: env.has-standard == 'true'
      uses: docker/build-push-action@v5
      id: docker-standard
      with:
        context: ${{ inputs.project }}
        file: ${{ inputs.project }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push == 'true' }}
        build-args: ${{ inputs.build-args }}
        tags: |
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}"
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.release-train }}-latest"
        labels: |
          "org.opencontainers.image.source=https://github.com/spinnaker/spinnaker"
          "org.opencontainers.image.revision=${{ github.sha }}"
          "org.opencontainers.image.version=${{ inputs.version }}"
          "io.spinnaker.ci-build=${{ inputs.build-url }}"

    - name: Build and publish slim container image
      if: env.has-slim == 'true'
      uses: docker/build-push-action@v5
      id: docker-slim
      with:
        context: ${{ inputs.project }}
        file: ${{ inputs.project }}/Dockerfile.slim
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push == 'true' }}
        build-args: ${{ inputs.build-args }}
        tags: |
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}"
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-slim"
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.release-train }}-latest"
        labels: |
          "org.opencontainers.image.source=https://github.com/spinnaker/spinnaker"
          "org.opencontainers.image.revision=${{ github.sha }}"
          "org.opencontainers.image.version=${{ inputs.version }}"
          "io.spinnaker.ci-build=${{ inputs.build-url }}"

    - name: Build and publish ubuntu container image
      if: env.has-ubuntu == 'true'
      uses: docker/build-push-action@v5
      id: docker-ubuntu
      with:
        context: ${{ inputs.project }}
        file: ${{ inputs.project }}/Dockerfile.ubuntu
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push == 'true' }}
        build-args: ${{ inputs.build-args }}
        tags: |
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-ubuntu"
        labels: |
          "org.opencontainers.image.source=https://github.com/spinnaker/spinnaker"
          "org.opencontainers.image.revision=${{ github.sha }}"
          "org.opencontainers.image.version=${{ inputs.version }}"
          "io.spinnaker.ci-build=${{ inputs.build-url }}"

    # If we have a Dockerfile.java11.[ubuntu|slim] file, attempt to build it
    - name: Build and publish slim JRE 11 container image
      if: env.has-slim-java11 == 'true'
      uses: docker/build-push-action@v5
      id: docker-slim-java11
      with:
        context: ${{ inputs.project }}
        file: ${{ inputs.project }}/Dockerfile.slim
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push == 'true' }}
        build-args: ${{ inputs.build-args }}
        tags: |
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-java11"
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-java11-slim"
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.release-train }}-latest-java11"
        labels: |
          "org.opencontainers.image.source=https://github.com/spinnaker/spinnaker"
          "org.opencontainers.image.revision=${{ github.sha }}"
          "org.opencontainers.image.version=${{ inputs.version }}"
          "io.spinnaker.ci-build=${{ inputs.build-url }}"

    - name: Build and publish ubuntu JRE 11 container image
      if: env.has-ubuntu-java11 == 'true'
      uses: docker/build-push-action@v5
      id: docker-ubuntu-java11
      with:
        context: ${{ inputs.project }}
        file: ${{ inputs.project }}/Dockerfile.ubuntu
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push == 'true' }}
        build-args: ${{ inputs.build-args }}
        tags: |
          "${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-java11-ubuntu"
        labels: |
          "org.opencontainers.image.source=https://github.com/spinnaker/spinnaker"
          "org.opencontainers.image.revision=${{ github.sha }}"
          "org.opencontainers.image.version=${{ inputs.version }}"
          "io.spinnaker.ci-build=${{ inputs.build-url }}"

    - name: Summarize
      shell: bash
      run: |
        echo "### Docker Publishing" >> "$GITHUB_STEP_SUMMARY"
        echo "| Type | Image SHA | Tag |" >> "$GITHUB_STEP_SUMMARY"
        echo "| --- | --- | --- |" >> "$GITHUB_STEP_SUMMARY"
        
        if [[ '${{ env.has-standard }}' == 'true' ]]; then
          echo "| __Standard__ | ${{ steps.docker-standard.outputs.imageid }} | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }} |" >> "$GITHUB_STEP_SUMMARY"
          echo "|  |  | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.release-train }}-latest |" >> "$GITHUB_STEP_SUMMARY"
        fi
        
        if [[ '${{ env.has-slim }}' == 'true' ]]; then
          echo "| __Slim__ | ${{ steps.docker-slim.outputs.imageid }} | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }} |" >> "$GITHUB_STEP_SUMMARY"
          echo "|  |  | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-slim |" >> "$GITHUB_STEP_SUMMARY"
          echo "|  |  | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.release-train }}-latest |" >> "$GITHUB_STEP_SUMMARY"
        fi
        
        if [[ '${{ env.has-ubuntu }}' == 'true' ]]; then
          echo "| __Ubuntu__ | ${{ steps.docker-ubuntu.outputs.imageid }} | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-ubuntu |" >> "$GITHUB_STEP_SUMMARY"
        fi
        
        if [[ '${{ env.has-slim-java11 }}' == 'true' ]]; then
          echo "| __Slim (java11)__ | ${{ steps.docker-slim-java11.outputs.imageid }} | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-java11 |" >> "$GITHUB_STEP_SUMMARY"
          echo "|  |  | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-slim-java11 |" >> "$GITHUB_STEP_SUMMARY"
          echo "|  |  | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.release-train }}-latest-java11 |" >> "$GITHUB_STEP_SUMMARY"
        fi
        
        if [[ '${{ env.has-ubuntu-java11 }}' == 'true' ]]; then
          echo "| __Ubuntu (java11)__ | ${{ steps.docker-ubuntu-java11.outputs.imageid }} | ${{ inputs.container-registry }}/${{ inputs.project }}:${{ inputs.version }}-ubuntu-java11 |" >> "$GITHUB_STEP_SUMMARY"
        fi
