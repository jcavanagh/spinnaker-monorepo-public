name: Spinnaker Release
run-name: Spinnaker Release (${{ inputs.spinnaker-version }} dry=${{ inputs.dry-run }})

on:
  workflow_dispatch:
    inputs:
      add-to-versions-yml:
        description: Add this version to `versions.yml` for Halyard?
        type: boolean
        default: true
      spinnaker-version:
        description: Confirm the Spinnaker version to publish.  This will be compared against the version computed by the release process, and will fail if they do not match.
      dry-run:
        type: boolean
        description: Dry run?
        default: true

jobs:
  check-preconditions:
    runs-on: ubuntu-latest
    steps:
      - name: Exit if not on a release branch
        run: |
          REF="${{ github.ref_name }}"
          
          if  [[ $REF != release-* ]]; then
            echo "Release workflow must be run from a release branch"
            exit 1
          fi
          
      - name: Generate next build tag without storing it
        if: inputs.dry-run == 'false'
        uses: ./.github/actions/build-tag-number
        id: precondition-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          suffix: ${{ format('{0}-{1}', 'spinnaker', github.ref_name) }}
          skip-increment: false
          skip-tag: true

      - name: Verify expected release version
        if: inputs.dry-run == 'false'
        run: |
          VERSION='${{ steps.precondition-version.outputs.version }}'
          USER_VERSION='${{ inputs.spinnaker-version }}'
          
          if [[ $VERSION != $USER_VERSION ]]; then
            echo "Mismatched release version expectations - user expected $USER_VERSION but next version is $VERSION"
            exit 1
          fi

  version:
    runs-on: ubuntu-latest
    steps:
    - id: version
      uses: ./.github/actions/version
      needs: check-preconditions
      with:
        namespace: spinnaker
        github-token: ${{ secrets.GITHUB_TOKEN }}
        skip-increment: ${{ github.run_attempt != '1' }}
        skip-tag: ${{ inputs.dry-run != 'false' }}

  clouddriver:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/clouddriver.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  deck:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/deck.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  deck-kayenta:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/deck-kayenta.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  echo:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/echo.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  fiat:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/fiat.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  front50:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/front50.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  gate:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/gate.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  halyard:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/halyard.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  igor:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/igor.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  kayenta:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/kayenta.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  keel:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/keel.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  orca:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/orca.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  rosco:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/rosco.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  spin:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/spin.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}
  libs:
    if: inputs.dry-run == 'false'
    runs-on: ubuntu-latest
    needs: version
    uses: ./.github/workflows/spinnaker-libraries.yml
    secrets: inherit
    with:
      version-override: ${{ needs.version.steps.version.outputs.version }}

  spinnaker-release-bom:
    runs-on: ubuntu-latest
    needs: [version, clouddriver, deck, deck-kayenta, echo, fiat, front50, gate, halyard, igor, kayenta, keel, orca, rosco, spin, libs]
    # This requires some exhaustive logic, since a job that can be skipped won't satisfy a `needs`
    # https://github.com/actions/runner/issues/491
    if: |
      always() &&
      (needs.version.result == 'success') &&
      (needs.clouddriver.result == 'success' || needs.clouddriver.result == 'skipped') &&
      (needs.deck.result == 'success' || needs.deck.result == 'skipped') &&
      (needs.deck-kayenta.result == 'success' || needs.deck-kayenta.result == 'skipped') &&
      (needs.echo.result == 'success' || needs.echo.result == 'skipped') &&
      (needs.fiat.result == 'success' || needs.fiat.result == 'skipped') &&
      (needs.front50.result == 'success' || needs.front50.result == 'skipped') &&
      (needs.gate.result == 'success' || needs.gate.result == 'skipped') &&
      (needs.halyard.result == 'success' || needs.halyard.result == 'skipped') &&
      (needs.igor.result == 'success' || needs.igor.result == 'skipped') &&
      (needs.kayenta.result == 'success' || needs.kayenta.result == 'skipped') &&
      (needs.keel.result == 'success' || needs.keel.result == 'skipped') &&
      (needs.orca.result == 'success' || needs.orca.result == 'skipped') &&
      (needs.rosco.result == 'success' || needs.rosco.result == 'skipped') &&
      (needs.spin.result == 'success' || needs.spin.result == 'skipped') &&
      (needs.libs.result == 'success' || needs.libs.result == 'skipped')
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Process Inputs
        shell: bash
        run: |
          echo "spinnaker-version=${{ needs.version.steps.version.outputs.release-train }}.${{ needs.version.steps.version.outputs.build-number }}" >> "$GITHUB_ENV"

      - name: Create Spinnaker release BoM and changelog
        id: spinnaker-release-bom
        uses: ./.github/actions/spinnaker-release
        with:
          credentials-json: ${{ secrets.GAR_JSON_KEY }}
          version: ${{ env.spinnaker-version }}
          dry-run: ${{ inputs.dry-run }}

      - name: Create Github release
        if: inputs.dry-run == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: spinnaker-release-${{ inputs.spinnaker-version }}
          release_name: Spinnaker ${{ inputs.spinnaker-version }}
          body: |
            ${{ steps.spinnaker-release-bom.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Summarize
        shell: bash
        if: github.event_name != 'pull_request'
        run: |
          echo "### Release Info" >> "$GITHUB_STEP_SUMMARY"
          echo "| | |" >> "$GITHUB_STEP_SUMMARY"
          echo "| --- | --- |" >> "$GITHUB_STEP_SUMMARY"
          echo "| __Version__ | ${{ inputs.spinnaker-version }} |" >> "$GITHUB_STEP_SUMMARY"
          echo "| __BoM__ | ${{ steps.spinnaker-release-bom.outputs.bom-url }} |" >> "$GITHUB_STEP_SUMMARY"
          echo "| __Changelog__ | ${{ steps.spinnaker-release-bom.outputs.bom-url }} |" >> "$GITHUB_STEP_SUMMARY"
          echo "| __versions.yml__ | ${{ steps.spinnaker-release-bom.outputs.versions-yml-url }} |" >> "$GITHUB_STEP_SUMMARY"
          echo "<details>" >> "$GITHUB_STEP_SUMMARY"
          echo "<summary>BoM Contents</summary>" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.spinnaker-release-bom.outputs.bom }}" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "</details>" >> "$GITHUB_STEP_SUMMARY"
          echo "<details>" >> "$GITHUB_STEP_SUMMARY"
          echo "<summary>Changelog Contents</summary>" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.spinnaker-release-bom.outputs.changelog }}" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "</details>" >> "$GITHUB_STEP_SUMMARY"
          echo "<details>" >> "$GITHUB_STEP_SUMMARY"
          echo "<summary>versions.yml Contents</summary>" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.spinnaker-release-bom.outputs.versions-yml }}" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "</details>" >> "$GITHUB_STEP_SUMMARY"
