defaultTasks 'build'

// We need top-level meta tasks, as Gradle does not automatically recurse through included builds to find tasks
tasks.register('assemble') { task ->
  gradle.includedBuilds.each { build ->
    task.dependsOn build.task(':assemble')
  }
}

tasks.register('build') { task ->
  gradle.includedBuilds.each { build ->
    task.dependsOn build.task(':build')
  }
}

tasks.register('check') { task ->
  gradle.includedBuilds.each { build ->
    task.dependsOn build.task(':check')
  }
}

tasks.register('clean') { task ->
  gradle.includedBuilds.each { build ->
    task.dependsOn build.task(':clean')
  }
}

tasks.register('publish') { task ->
  gradle.includedBuilds.each { build ->
    task.dependsOn build.task(':publish')
  }
}

tasks.register('test') { task ->
  gradle.includedBuilds.each { build ->
    task.dependsOn build.task(':test')
  }
}

// Create a special Java-only publishing task for libraries
def withoutDeck = gradle.includedBuilds.findAll {
  it.name != 'deck'
}

tasks.register('publishJava') { task ->
  withoutDeck.each { build ->
    task.dependsOn build.task(':publish')
  }
}

// Create aliases to start each service
tasks.register('clouddriver') {
  it.dependsOn gradle.includedBuild('clouddriver').task(':clouddriver-web:run')
}

tasks.register('deck-build') {
  it.dependsOn gradle.includedBuild('deck').task(':build')
}

tasks.register('deck') {
  it.dependsOn gradle.includedBuild('deck').task(':run')
}

tasks.register('echo') {
  it.dependsOn gradle.includedBuild('echo').task(':echo-web:run')
}

tasks.register('fiat') {
  it.dependsOn gradle.includedBuild('fiat').task(':fiat-web:run')
}

tasks.register('front50') {
  it.dependsOn gradle.includedBuild('front50').task(':front50-web:run')
}

tasks.register('gate') {
  it.dependsOn gradle.includedBuild('gate').task(':gate-web:run')
}

tasks.register('igor') {
  it.dependsOn gradle.includedBuild('igor').task(':igor-web:run')
}

tasks.register('kayenta') {
  it.dependsOn gradle.includedBuild('kayenta').task(':kayenta-web:run')
}

tasks.register('keel') {
  it.dependsOn gradle.includedBuild('keel').task(':keel-web:run')
}

tasks.register('orca') {
  it.dependsOn gradle.includedBuild('orca').task(':orca-web:run')
}

tasks.register('rosco') {
  it.dependsOn gradle.includedBuild('rosco').task(':rosco-web:run')
}
